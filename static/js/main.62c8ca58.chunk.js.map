{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","temp","setTemp","city","setCity","input","setInput","logo","useEffect","a","fetch","response","json","console","log","main","weather","icon","fetchData","document","getElementById","style","display","className","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","class","src","alt","id","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAoEeA,MA/Df,WAAgB,IAAD,EAEYC,mBAAS,IAFrB,mBAEPC,EAFO,KAEAC,EAFA,OAGUF,mBAAS,IAHnB,mBAGPG,EAHO,KAGDC,EAHC,OAIUJ,mBAAS,IAJnB,mBAIPK,EAJO,KAIDC,EAJC,OAKYN,mBAAS,IALrB,mBAKPO,EALO,KAKAC,EALA,KAMTC,EAAO,mCAAqCR,EAAQ,OA8BxD,OAzBFS,qBAAW,WAAM,4CAEf,8BAAAC,EAAA,+EAG8BC,MAAM,oDAAD,OAAqDP,EAArD,iEAHnC,cAGWQ,EAHX,gBAIwBA,EAASC,OAJjC,OAIWA,EAJX,OAKKC,QAAQC,IAAIF,GACXV,EAAQU,EAAKG,KAAKd,MAClBD,EAASY,EAAKI,QAAQ,GAAGC,MAP/B,6GAFe,sBAcF,KAATd,EAdY,WAAD,wBAebe,IAEAhB,EAAQ,MACRF,EAAS,MACTmB,SAASC,eAAe,QAAQC,MAAMC,QAAQ,UAGhD,CAACnB,IAIC,sBAAKoB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,+BAAI,qCAAJ,oBAAmC,0CAGrC,sBAAKA,UAAU,OAAf,UACE,uBAAMC,SAAU,SAAAC,GAAMA,EAAEC,iBAAkBtB,EAAQC,IAAlD,UAEE,uBAAOsB,MAAOtB,EAAOuB,SAAU,SAAAH,GAAC,OAAGnB,EAASmB,EAAEI,OAAOF,QAAQG,KAAK,OAAOC,YAAY,YAErF,wBAAQD,KAAK,SAAb,SAAsB,mBAAGE,MAAM,6BAEjC,oBAAIT,UAAU,OAAd,SAAsBpB,IACrB,qBAAK8B,IAAK1B,EAAM2B,IAAI,KACpB,qBAAKX,UAAU,cAAf,SACA,+BAAKtB,EAAK,sBAAMkC,GAAG,OAAT,wBAEV,qBAAKZ,UAAU,SAAf,SACG,mBAAGa,KAAK,8CAAR,SAAsD,qDChDnDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BiB,M","file":"static/js/main.62c8ca58.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\nconst [ image, setImage] = useState('');\nconst [ temp, setTemp] = useState('');\nconst [ city, setCity] = useState('');\nconst [ input, setInput] = useState('');\nconst logo = \"http://openweathermap.org/img/w/\" + image + \".png\";\n\n\n\n\nuseEffect (() => {\n\n  async function fetchData(){\n\n    try{\n       const response =   await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&lang=fr&units=metric&appid=2948eccdc30baaeb3ad5a74151b84eb1`);\n       const json = await response.json();\n       console.log(json)\n        setTemp(json.main.temp);\n        setImage(json.weather[0].icon);  \n        \n    }catch(error) {}\n  }\n  \n  if (city !== ''){\n    fetchData();\n  } else {\n    setTemp(null);\n    setImage(null);\n    document.getElementById('span').style.display=\"none\";\n  }\n  \n},[city]);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"titre\">\n        <h1><span>W</span>EATHER APPLICATIO<span>N</span></h1>\n      </div>\n\n      <div className=\"card\">\n        <form onSubmit={e => {e.preventDefault(); setCity(input);}}>\n\n          <input value={input} onChange={e =>setInput(e.target.value)} type=\"text\" placeholder=\"City...\"/>\n\n          <button type=\"submit\"><i class=\"fas fa-2x fa-search\"></i></button>\n        </form>\n        <h2 className=\"city\">{city}</h2>\n         <img src={logo} alt=\"\"/> \n         <div className=\"temperature\">\n         <h3>{temp}<span id=\"span\">Â°C</span></h3>\n         </div>\n         <div className=\"return\">\n            <a href=\"https://romainbernaz.github.io/portfolioV2/\"><button>BACK</button></a>\n         </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}