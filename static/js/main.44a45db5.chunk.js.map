{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","temp","setTemp","city","setCity","input","setInput","logo","cityFinal","charAt","toUpperCase","slice","tempFinal","Math","round","document","getElementById","style","display","useEffect","a","fetch","response","json","message","main","weather","icon","fetchData","className","onSubmit","e","preventDefault","id","value","onChange","target","type","placeholder","src","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAgGeA,MA3Ff,WAAgB,IAAD,EAEYC,mBAAS,IAFrB,mBAEPC,EAFO,KAEAC,EAFA,OAGUF,mBAAS,IAHnB,mBAGPG,EAHO,KAGDC,EAHC,OAIUJ,mBAAS,IAJnB,mBAIPK,EAJO,KAIDC,EAJC,OAKYN,mBAAS,IALrB,mBAKPO,EALO,KAKAC,EALA,KAMTC,EAAO,oCAAsCR,EAAQ,OAErDS,EAAYL,EAAKM,OAAO,GAAGC,cAAgBP,EAAKQ,MAAM,GACtDC,EAAYC,KAAKC,MAAMb,GAoD3B,OAlDgB,IAAZW,IAGFG,SAASC,eAAe,eAAeC,MAAMC,QAAQ,SAKzDC,qBAAW,WAAM,4CAaf,8BAAAC,EAAA,+EAE8BC,MAAM,qDAAD,OAAsDb,EAAtD,iEAFnC,cAEWc,EAFX,gBAGwBA,EAASC,OAHjC,OAKyB,oBAFdA,EAHX,QAKaC,SACPT,SAASC,eAAe,gBAAgBC,MAAMC,QAAQ,QACtDhB,EAAQ,MACRF,EAAS,QAGTE,EAAQqB,EAAKE,KAAKxB,MAClBD,EAASuB,EAAKG,QAAQ,GAAGC,MACzBZ,SAASC,eAAe,gBAAgBC,MAAMC,QAAQ,QAb5D,kDAiBMhB,EAAQ,MACRF,EAAS,MACTe,SAASC,eAAe,QAAQC,MAAMC,QAAQ,OAnBpD,2DAbe,sBAGXV,IAHW,mCAIboB,GACAtB,EAAS,IACTS,SAASC,eAAe,QAAQC,MAAMC,QAAQ,gBAE9ChB,EAAQ,MACRF,EAAS,MACTe,SAASC,eAAe,QAAQC,MAAMC,QAAQ,UA6BhD,CAACV,IAIC,sBAAKqB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,+BAAI,qCAAJ,oBAAmC,0CAGrC,sBAAKA,UAAU,OAAf,UACE,uBAAMC,SAAU,SAAAC,GAAMA,EAAEC,iBAAkB5B,EAAQC,IAAlD,UAEF,sBAAKwB,UAAU,YAAf,UACA,uBAAOI,GAAG,eAAcC,MAAO7B,EAAO8B,SAAU,SAAAJ,GAAC,OAAGzB,EAASyB,EAAEK,OAAOF,QAAQG,KAAK,OAAOC,YAAY,YAC5F,wBAAQD,KAAK,SAAb,SAAsB,mBAAGR,UAAU,uBAEzC,oBAAII,GAAG,eAAeJ,UAAU,eAAhC,0FAGF,oBAAIA,UAAU,OAAd,SAAsBrB,IACrB,qBAAK+B,IAAKhC,EAAMiC,IAAI,KACpB,qBAAKP,GAAG,cAAaJ,UAAU,cAA/B,SACC,+BAAKjB,EAAU,sBAAMqB,GAAG,OAAT,wBAEhB,qBAAKJ,UAAU,SAAf,SACG,mBAAGY,KAAK,8CAAR,SAAsD,qDC5EnDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,M","file":"static/js/main.44a45db5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\nconst [ image, setImage] = useState('');\nconst [ temp, setTemp] = useState('');\nconst [ city, setCity] = useState('');\nconst [ input, setInput] = useState('');\nconst logo = \"https://openweathermap.org/img/w/\" + image + \".png\";\n\nconst cityFinal = city.charAt(0).toUpperCase() + city.slice(1)\nconst tempFinal = Math.round(temp);\n\n  if (tempFinal===0){\n  //  document.getElementById('temperature').style.display='none';\n  }else {\n    document.getElementById('temperature').style.display='block';\n  }\n\n\n\nuseEffect (() => {\n\n\n  if (cityFinal){\n    fetchData();\n    setInput('');\n    document.getElementById('span').style.display=\"inline-flex\";\n  } else {\n    setTemp(null);\n    setImage(null);\n    document.getElementById('span').style.display=\"none\";\n  }\n\n  async function fetchData(){\n    try{\n       const response =   await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityFinal}&lang=fr&units=metric&appid=2948eccdc30baaeb3ad5a74151b84eb1`);\n       const json = await response.json();\n\n       if(json.message === 'city not found'){\n        document.getElementById('errorweather').style.display='block'\n        setTemp(null);\n        setImage(null);\n\n       }else {\n        setTemp(json.main.temp);\n        setImage(json.weather[0].icon);  \n        document.getElementById('errorweather').style.display='none'\n\n       }\n    }catch(error) {\n        setTemp(null);\n        setImage(null);\n        document.getElementById('span').style.display=\"none\";\n\n    }\n  }\n  \n \n  \n},[cityFinal]);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"titre\">\n        <h1><span>W</span>EATHER APPLICATIO<span>N</span></h1>\n      </div>\n\n      <div className=\"card\">\n        <form onSubmit={e => {e.preventDefault(); setCity(input);}}>\n\n      <div className=\"inputLink\">\n      <input id=\"inputweather\"value={input} onChange={e =>setInput(e.target.value)} type=\"text\" placeholder=\"City...\"/>\n                <button type=\"submit\"><i className=\"fas fa-search\"></i></button>\n      </div>\n          <h3 id=\"errorweather\" className=\"errorweather\">La ville recherchée ne semble pas exister ou est mal orthographiée.</h3>\n\n        </form>\n        <h2 className=\"city\">{cityFinal}</h2>\n         <img src={logo} alt=\"\"/> \n         <div id=\"temperature\"className=\"temperature\">\n          <h3>{tempFinal}<span id=\"span\">°C</span></h3>\n         </div>\n         <div className=\"return\">\n            <a href=\"https://romainbernaz.github.io/portfolioV2/\"><button>BACK</button></a>\n         </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}